  Node<int>* rearrange(Node<int> *head){
	// Write your code here
    Node<int>*temp=head;
int count=0;
while(temp!=NULL){
    count++;
    temp=temp->next;
}
int n=count;
Node<int>*temp2=head;
for(int i=1;i<=count/2;i++){
    Node<int>*temp1=head;
    for(int i=1;i<n;i++){
        temp1=temp1->next;
    }
    Node<int>*temp3=temp2->next;
    temp2->next=temp1;
    temp1->next=temp3;
    temp2=temp2->next->next;
}
Node<int>*temp1=head;
for(int i=1;i<n;i++){
    temp1=temp1->next;
}
temp1->next=NULL;
return head;
    
}
    

#include<iostream>
using namespace std;

template <typename T>
class Node {
	public:
	T data;
	Node* next;

	Node(T data) {
		next = NULL;
		//(*this).data = data;
		this->data = data;
	}

	~Node() {
		if (next != NULL) {
			delete next;
		}
	}
};
#include"solution.h"
Node<int>* takeLLInput() {
    int data;
    cin>>data;
    Node<int>* head=NULL,*tail=NULL;
    while(data!=-1){
        Node<int> *newnode=new Node<int>(data);
        if(head==NULL)                  {
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=newnode;
        }
        cin>>data;
    }
    return head;
}

void printLL(Node<int>*  head) {
	while (head != NULL) {
		cout << head->data << " ";
		head = head->next;
	}
	cout << endl;
}


int main()
{
	Node<int>* head1=takeLLInput();
	head1 = rearrange(head1);
	printLL(head1);
	return 0;
}
